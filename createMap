#!/bin/bash

style=default
debug=false
nodownload=false
path=$(dirname "${0}")
tmpdir=$(dirname $(mktemp -u))
oldtime="-10 month"

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
	-a|--area)
		area=${2,,}
		shift # past argument
		shift # past value
		;;
	-s|--style)
		style=${2,,}
		shift # past argument
		shift # past value
		;;
	-d|--debug)
		debug=true
		shift # past value
		;;
	-nd|--nodownload)
		nodownload=true
		shift # past argument
		shift # past value
		;;
	--help|*)
		echo -e "Usage: $0 -a name [-l name] [-d] [-nd]" >&2
		echo -e "\t-a,  --area nameofarea\tprocess area to img" >&2
		echo -e "\t-s,  --style\tProcess current style" >&2
		echo -e "\t-d,  --debug\tMore detailed statement" >&2
		echo -e "\t-nd, --nodownload\t\tDisable downloads" >&2
		echo -e "Exit status:" >&2
		echo -e "\t0     - Processed" >&2
		echo -e "\tother - Other error" >&2
		exit 1
		;;
	X)
		area=${key}
		shift # past argument
		if [ -z ${destfile} ]; then
			destfile=${url%%#*}
			destfile=$(basename -- ${destfile%%\?*})
		fi;
		;;
	esac
done

function exitmsg {
	local msg=$1;
	local es=${2:0}
	echo -e ${msg} >&2
	exit $es
}
function msg {
	local msg=$@;
	[ ${debug} ] && echo -e ${msg}
}

function showFileTime {
	[ ! -e $1 ] && return 1;
	stat -L --format %Y ${1} | { read gmt ; echo `date -d "@$gmt" "+%F %T"`" "`basename ${1}`; }
}

function checkModifFile {
	local fS=$1;
	local fD=$2;
	local fM=$3;
#	[ -e ${fS} ] && printf "%s %s SRC %s\n" `date '+%F %T' -r ${fS}` ${fS}
#	[ -e ${fM} ] && printf "%s %s MDF %s\n" `date '+%F %T' -r ${fM}` ${fM}
#	[ -e ${fD} ] && printf "%s %s DST %s\n" `date '+%F %T' -r ${fD}` ${fD}

#	[[ ! -e ${fD} ]] && echo -e "\t\t1. DST not exists!";
	[[ ! -e ${fD} ]] && return 0;

#	[[ ${fD} -ot ${fM} ]] && echo -e "\t\t2. time DST < MDF";
	[[ ${fD} -ot ${fM} ]] && return 0;

#	[[ ${fS} -nt ${fD} ]] && echo -e "\t\t3. time SRC > DST";
	[[ ${fS} -nt ${fD} ]] && return 0;

#	echo -e "\t\t4. No change";
	return 1;
}

echo -e "\n### "`date '+%F %T'`" START"
echo -e "\n### 0. Check parameters..."

[ -z ${area} ] && errmsg 1 "The parameter area is obligatory. Use $0 --help"

msg "ROOT: ${path}"
msg "      Area: ${area}"
msg "     style: ${style}"
${debug} && msg "     Debug: ${debug}"
${nodownload} && msg "NoDownload: ${nodownload}"

[ ! -d ${path}/area ] && mkdir -p ${path}/area
[ ! -d ${path}/cache ] && mkdir -p ${path}/cache
[ ! -d ${path}/style ] && mkdir -p ${path}/style

echo -e "\n### 0.1 Check ${area}.parameters"
[ ! -e ${path}/area/${area}.parameters ] && exitmsg "Parameters for area '${path}/area/${area}.parameters' not found!" 1;
msg ${path}/area/${area}.parameters
source ${path}/area/${area}.parameters

[ ! -e ${path}/area/${area}.mkgmap ] && exitmsg "Config mkgmap for area '${path}/area/${area}.mkgmap' not found!" 1;

echo -e "\n### 1. Check mkgmap"
echo -e "\n### 2. Check splitter"

echo -e "\n### 3. Check geofabric"

function check {
	local url="a"
	echo "URL '$url'"
	[ -n "${url}" ] && echo "url -n $url "
	[ -z "${url}" ] && echo "url -z $url "
	[ -e "${url}" ] && echo "url -e $url "
	[ ! -e "${url}" ] && echo "url !-e $url "
	#URL ''  url -z   url !-e
	#URL '/' url -n / url -e /
	#URL 'a' url -n a url !-e a
}


#srctmpfile_dwl=${tmpdir}/$(basename ${srcfile})".downloaded"
srctmpfile_plg=${srcfile}".polygoned"
srctmpfile_flt=${srcfile}".filtered"
if [[ ! ${nodownload} && -n "${url}" ]]; then
	msg "url=${url}"
	echo -e "######TODO> 3.1 TODO Download "`echo ${url} | awk -F[/:] '{print $4}'
`" CREATE ${srcfile}"
	${path}/bin/curletag -ft "-1 day" -f ${srcfile} ${url}
else
	[ -n "${url}" ] && echo -e "###### 3.9.1 No url."
	[ ! ${nodownload} ] && echo -e "###### 3.9.2 Disable download by parameter -nd."
fi;

showFileTime ${srcfile} || exitmsg 1 "Source file ${srcfile} not found(1)!"

echo -e "\n### 4. Check polygon ${polygon}"
if [[ -n "${polygon}" && -e ${polygon} ]]; then
	echo -e "\t###### 4.1 Polygon '${polygon}' exists."
	if checkModifFile ${srcfile} ${srctmpfile_plg} ${polygon}; then
		echo -e "\t###### 4.2 TODO Polygoned ${srctmpfile_plg}"
		echo -n "POLYGONED "`date '+%F %T'` > ${srctmpfile_plg}
	fi;
else
	msg "\t###### 4.9 Polygon not exists."
	srctmpfile_plg=${srcfile}
fi;

echo -e "\n### 5. Check filter"
if [[ -n "${filter}" && -e ${filter} ]]; then
	echo -e "\t###### 5.1 Filter '${filter}' exists."
	if checkModifFile ${srctmpfile_plg} ${srctmpfile_flt} ${filter}; then
		echo -e "\t###### 5.2 TODO Filtered ${srctmpfile_flt}"
		echo -n "FILTERED "`date '+%F %T'` > ${srctmpfile_flt}
	fi;
else
	echo -e "\t###### 5.9 Filter not exists."
	srctmpfile_flt=${srctmpfile_plg}
fi;

srcfile=${srctmpfile_flt}
showFileTime ${srcfile} || exitmsg 1 "Source file ${srcfile} not found(2)!"
head -n 1 ${srcfile}

msg "\n### 6. Check splitter"
msg "\n### 7. Run mkgmap"

msg "\n### 8. Postprocessing"

echo -e "\n### "`date '+%F %T'`" END\n"



